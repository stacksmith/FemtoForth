cd 'test


// Decompiling a 0 token is tricky...
PROC deco1 // (ip--ip,e)
{
    U8'@++ // ptr,tok
    if( zr )
      drop ref ; head'owner ; // a search for "'system'core';" may be better?
    thanx
    4* over table'base + @ // ip,ref
    if( head'owner nz )
        ;
    else
        drop 1 error'throw
    thanx
    ;
}
end

// decompile a token and associated data in the codestream
PROC deco_tok // (ip--ip)
{
    if( error'catch 0= )
        color'dim color'white '<' emit color'reset color'green
        deco1 dup head'name ctell space
        head'type 
        if( push "decompile" pop  head'locatex zr )
            dbl'drop 1 error'throw
        thanx
        color'dim color'white '>' emit color'reset color'white
        head'code invoke // find and run decompile
        error'clear
    else 
        "ERROR" ctell 
    thanx
    ;
}
end
PROC deco_n // (ip,cnt--ip)
{ times (
  color'green dup . space
  color'cyan dup U8'@ hex2 space
  dd
  deco_tok 
  cr
  ) color'reset ;
}
end

cd 'system'TYPE'PROC
PROC decompile // (ip--ip)
{ ; }
end

cd 'system'TYPE'PSTR8
PROC decompile // (ip--ip)
{   '"' emit
    U8'@++      // ptr,cnt
    dbl'dup ctell
    +
    '"' emit
    ;
}
end

cd 'system'TYPE'PU32
PROC decompile // (ip--ip)
{   
    dup @++ . ;
}
end

cd 'system'TYPE'PU16
PROC decompile // (ip--ip)
{   
    dup U16'@++ . ;
}
end

cd 'system'TYPE'PU8
PROC decompile // (ip--ip)
{   
    dup U8'@++ 
    dup hex2 space
    ''' emit
    dup emit 
    ''' emit
    ;
}
end
cd 'test

