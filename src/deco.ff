cd 'test


// Decompiling a 0 token is tricky...
PROC deco1 // (ip--ip,e)
{
    U8'@++ // ptr,tok
    if( zr )
      drop ref ; head'owner ; // a search for "'system'core';" may be better?
    thanx
    4* over 1- table'base + @ // ip,ref
    if( head'owner nz )
        ;
    else
        drop 1 error'throw
    thanx
    ;
}
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_ONE // (ip--ip) 
{
    U8'@++ 
    '$' emit dup hex2 space
    if( U8'is_print )
      ''' emit  emit ''' emit
    else
      drop
    thanx 
    ;
}
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_TWO // (ip--ip) 
{   '$' emit dup U16'@++ . ; }
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_FOUR // (ip--ip) 
{    '$' emit dup @++ . ;
}
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_OFF8 // (ip--ip) 
{  U8'@++ over + . ;
}
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_REF // (ip--ip) 
{   
    U8'@++      // ip+1,ref
    4* over 1- table'base + @ // ip,ref
    head'owner head'name.
    ;
}
end
// ----------------------------------------------------------------------
PROC deco_PAYLOAD_STR8 // (ip--ip) 
{   '"' emit
    U8'@++      // ptr,cnt
    dbl'dup ctell
    +
    '"' emit
    ;
}
end
// ----------------------------------------------------------------------

PROC deco_payload // (ip,h--)
{
    head'ptype
    if( zr ) drop ; thanx      // No payload
    if( 1 eq ) drop deco_PAYLOAD_ONE ; thanx
    if( 2 eq ) drop deco_PAYLOAD_TWO ; thanx
    if( 3 eq ) drop deco_PAYLOAD_FOUR ; thanx
    if( 4 eq ) drop deco_PAYLOAD_OFF8 ; thanx
    if( 5 eq ) drop deco_PAYLOAD_REF ; thanx
    if( 6 eq ) drop deco_PAYLOAD_STR8 ; thanx
    "deco_payload error" ctell 1 error'throw
}
end
// decompile a token and associated data in the codestream
PROC deco_tok // (ip--ip)
{
    if( error'catch 0= )
        color'dim color'white '<' emit color'reset color'green
        deco1 dup head'name. // (ip,h)
        color'dim color'white '>' emit color'reset color'white
        space
        deco_payload
//        if( push "decompile" pop  head'locatex zr )
//            dbl'drop 1 error'throw
//        thanx
//        head'code invoke // find and run decompile
        error'clear
    else 
        "ERROR" ctell 
    thanx
    ;
}
end
PROC deco_n // (ip,cnt--ip)
{ times (
// see if ip is a named target
  if( dup head'owner nz ) 
    color'cyan head'name. ':' emit cr
  else drop thanx
  
  color'green space dup . space // address
  color'cyan dup U8'@ hex2 space
  
  deco_tok 
  cr
  ) color'reset ;
}
end


cd 'test

